{"version":3,"sources":["util.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;AAEb,SAAS,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE;;;;;;;;;;;;;;;;;;;;AAoBvB,WAAS,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;AAC1C,sCAAO,iBAAW,IAAI;UAChB,IAAI;;;;;AAAJ,kBAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;;AAC5B,kBAAI,IAAI,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;AACzC,uBAAO,CAAC,IAAI,CAAC,CAAC;eACf,MAAM,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;AACxC,uBAAO,CAAC,IAAI,CAAC,CAAC;eACf;;;qBAEK,IAAI;;;;;;;;KACX,EAAA;GACF;;AAED,MAAI,CAAC,IAAI,GAAG;AACV,aAAS,EAAG,SAAS;GACtB,CAAC;;AAEF,SAAO,GAAG,CAAC;CACZ;;kBAEc,IAAI","file":"util.js","sourcesContent":["'use strict';\n\nfunction util(naws, koa) {\n\n  /**\n   * authcheck checks for the existence of a property in the session (defaults\n   * to `user`) and then if it exists, runs the function defined in success, or\n   * failure if otherwise\n   *\n   * `success` and `failure` will be passed in the koa context (`this`), so you\n   * can make calls like you normally do inside a koa middleware. Most of the\n   * time you should use this to redirect instead.\n   *\n   * Example:\n   *\n   *  app.get('/', app.util.authcheck('user', (ctx) => ctx.redirect('/dashboard'), (ctx) => ctx.redirect('/login')));\n   * \n   * @param  {string} check   [description]\n   * @param  {function} success [description]\n   * @param  {function} failure [description]\n   * @return {[type]}         [description]\n   */\n  function authcheck(check, success, failure) {\n    return function *(next) {\n      let user = this.session.user;\n      if (user && typeof success === 'function') {\n        success(this);\n      } else if (typeof failure === 'function') {\n        failure(this);\n      }\n\n      yield next;\n    }\n  }\n\n  naws.util = {\n    authcheck : authcheck\n  };\n  \n  return koa;\n}\n\nexport default util;"],"sourceRoot":"/source/"}