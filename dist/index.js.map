{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nimport path from 'path';\nimport debug from 'debug';\nimport koa from 'koa';\nimport { install } from 'source-map-support';\ninstall();\n\nimport routerify from './router';\nimport logify from './log';\nimport utilify from './util';\nimport renderify from './render';\nimport sessionify from './session';\n\nconst trace  = debug('naws:trace');\nconst metric = debug('naws:metric');\nconst error  = debug('naws:error');\n\nclass Naws {\n  static make() {\n    return new Naws();\n  }\n\n  constructor() {\n    this.app = koa();\n    this.app.conf = {\n      // directory configuration\n      'base dir'    : process.cwd(),\n      'handler dir' : 'handler',\n      'view dir'    : 'view',\n      'layout dir'  : 'layout',\n      'asset dir'   : 'asset',\n\n      // server configuration\n      'server port' : 13371,\n\n      // session configuration\n      'session store' : 'memory',\n      'session host' : 'localhost',\n      'session port' : 6379,\n\n      // renderer configuration\n      'view engine' : 'html',\n      'view ext'    : '.html'\n    };\n\n    this.trace = trace;\n    this.error = error;\n    this.metric = metric;\n    this.util = {};\n  }\n\n  init() {\n    let app = this.app;\n\n    // This way, you can `this.app.emit('trace', '...')` to send output to trace\n    app.on('trace', function (msg) {\n      trace(msg);\n    });\n\n    // This way, you can `this.app.emit('perf', '...')` to send output to metrics\n    app.on('perf', function (details) {\n      metric(`${details.ms}ms | ${details.type} | ${details.data}`);\n    });\n\n    // This way, you can `this.app.emit('error', '...')` to send output to error\n    app.on('error', function (err) {\n      if (typeof err === 'string') {\n        err = new Error(err);\n      }\n\n      error(err);\n    });\n\n    app = logify(app);\n    app = sessionify(app);\n    app = routerify(app);\n    app = utilify(this, app);\n    app = renderify(app);\n\n    return this;\n  }\n\n  /**\n   * .set(config, value)\n   *\n   * Sets a config in NAWS with new value. Supported config are:\n   *\n   * - base dir\n   * - model dir\n   * - handler dir\n   * - view dir\n   * - layout dir\n   * - server port\n   * - session store\n   * - view engine\n   * - view ext\n   * \n   * @param {String} config Config to change\n   * @param {Mixed} value   A value to assign to the config\n   */\n  set(config, value) {\n    // Make sure only legit config are set\n    let conf = this.app.conf;\n    let keys = Object.keys(conf);\n\n    if (keys.indexOf(config) === -1) {\n      error(`${config} is an invalid config`);\n      error(`Only these keys are supported: ${keys.join(',')}`);\n      return this;\n    }\n\n    let old = conf[config];\n    conf[config] = value;\n    trace(`${config} changed value from ${old} -> ${value}`);\n\n    return this;\n  }\n\n  get() {\n    let arg = Array.prototype.slice.call(arguments);\n    let _ = this.app.router;\n    _.get.apply(_, arg);\n    return this;\n  }\n\n  post() {\n    let arg = Array.prototype.slice.call(arguments);\n    let _ = this.app.router;\n    _.post.apply(_, arg);\n    return this;\n  }\n\n  head() {\n    let arg = Array.prototype.slice.call(arguments);\n    let _ = this.app.router;\n    _.head.apply(_, arg);\n    return this;\n  }\n\n  delete() {\n    let arg = Array.prototype.slice.call(arguments);\n    let _ = this.app.router;\n    _.delete.apply(_, arg);\n    return this;\n  }\n\n  put() {\n    let arg = Array.prototype.slice.call(arguments);\n    let _ = this.app.router;\n    _.put.apply(_, arg);\n    return this;\n  }\n\n  head() {\n    let arg = Array.prototype.slice.call(arguments);\n    let _ = this.app.router;\n    _.head.apply(_, arg);\n    return this;\n  }\n\n  run(port) {\n    // Initialise the router\n    let app = this.app;\n    let router = app.router;\n    \n    app.use(app.router.routes());\n    app.use(app.router.allowedMethods());\n\n    app.server = app.listen(port || this.app.conf['server port']);\n    return app.server;\n  }\n\n  stop() {\n    app.server.close();\n  }\n\n  handler() {\n    let args  = Array.prototype.slice.call(arguments);\n    let name  = args.shift();\n    let conf  = this.app.conf;\n    let hpath = path.join(conf['base dir'], conf['handler dir'], name);\n    return require(hpath).default(this, this.app);\n  }\n\n  render(view, extras) {\n    return function*(next) {\n      yield next;\n      // Compile locals\n      yield this.render(view, extras);\n    };\n  }\n};\n\nlet make = Naws.make;\n\nexport default make;"],"sourceRoot":"/source/"}